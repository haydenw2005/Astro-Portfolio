---
import { FileTree } from '@/components/FileNavigator';
import { Projects } from '@/components/Projects';
import Travel from '@/components/Travel';
import '@/styles/global.css';
import AboutMe from '../components/AboutMe';
import { DynamicStars } from '../components/DynamicStars';
import Welcome from '../components/Welcome';
import meImages from "../constants/Me_Images.json";
import { techIcons } from '../constants/TechIcons';
import Layout from '../layouts/Layout.astro';
import { optimizeImage } from "../utils/ImageOptimization";
import Experience from '@/components/Experience';
import Contact from '@/components/Contact';

// Import all tech icons statically

const techIconImages = await Astro.glob<{ default: ImageMetadata }>('../images/TechIcons/*.(png|svg|jpg|jpeg|webp)');
const meImageFiles = await Astro.glob<{ default: ImageMetadata }>('../images/Me/*.(png|jpg|jpeg|webp)');

const optimizedTechIcons = await Promise.all(
  techIcons.map(async (icon) => {
    const optimized = await optimizeImage(icon, techIconImages, { width: 50, format: 'webp' });
    return { ...icon, optimizedSrc: optimized.optimizedSrc };
  })
);
const optimizedMeImages = await Promise.all(
  meImages.map(async (image, index) => {
    const optimized = await optimizeImage(image, meImageFiles, { width: 300, format: 'webp' });
    return { src: image, optimizedSrc: optimized.optimizedSrc, alt: `Me Image ${index}` };
  })
);

const props = Astro?.locals?.netlify?.context;
console.log(props);

---

<Layout title="Hayden White" description="Explore the digital world of Hayden White">
  <div class="relative">
    <DynamicStars client:load/>
    <div class="relative z-10 text-white text-xl">
      <section id="welcome">
        <div class="mx-auto p-4  sm:max-w-[50%]  leading-relaxed flex items-center min-h-screen">
          <Welcome />
        </div>
      </section>
      <div class="flex mt-[20vh]">
        
        <div class="hidden md:flex-grow mt-[0%] min-h-screen pl-3 md:block">
          <FileTree client:load />
        </div>

        <div class="flex-grow pr-3 pl-3 mx-auto">
          <section id="about-me">
            <div class="overflow-hidden">
              <div class=" leading-relaxed flex items-center mb-3">
                <AboutMe client:visible optimizedTechIcons={optimizedTechIcons} optimizedMeImages={optimizedMeImages} />
              </div>
            </div>
          </section>
          <section id="projects">
            <div class=" leading-relaxed flex items-center mb-3">
              <Projects client:visible />
            </div>
          </section>

          <section id="experience">
            <div class=" leading-relaxed flex items-center">
              <Experience client:visible />
            </div>
          </section>
         
          
          <!-- <section id="contact">
            <div class=" leading-relaxed flex items-center">
              <Contact client:visible />
            </div>
          </section> -->
        </div>
      </div><section id="wip">
        <div class="leading-relaxed flex items-center mb-3">
          <Travel client:visible />
        </div>
      </section>
    </div>
  </div>
</Layout>

<script>
  const sections = document.querySelectorAll('section[id]');
  const observerOptions = {
    root: null,
    rootMargin: '0px',
    threshold: 0.5
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const newHash = `#${entry.target.id}`;
        if (window.location.hash !== newHash) {
          history.replaceState(null, '', newHash);
          // Dispatch a custom hashchange event
          window.dispatchEvent(new HashChangeEvent('hashchange'));
        }
      }
    });
  }, observerOptions);

  sections.forEach(section => {
    observer.observe(section);
  });
</script>



